//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Inventory/Inputs/InventoryInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InventoryInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InventoryInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InventoryInputActions"",
    ""maps"": [
        {
            ""name"": ""Inventory"",
            ""id"": ""992397d8-04ca-4f4e-b7d8-68e92146a227"",
            ""actions"": [
                {
                    ""name"": ""CursorPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""faa3deef-045d-4e28-9833-3c4336903db0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Place/Pickup"",
                    ""type"": ""Button"",
                    ""id"": ""7998691d-1b4c-4723-8348-3291dafbe72e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenOptions"",
                    ""type"": ""Button"",
                    ""id"": ""c04f5069-2735-4447-818c-08707ba47050"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""6d436625-4ed3-4951-b8e7-9a799fea12f8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GridMovement"",
                    ""type"": ""Value"",
                    ""id"": ""c3cbd701-b001-4dc7-8ce6-161eeaa12425"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GenerateItem"",
                    ""type"": ""Button"",
                    ""id"": ""683969a7-65e6-4d5d-8156-4e27b942d63d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""edcf68ba-a0c6-49c9-82be-01bc41c39525"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""CursorPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7567fa1-7d18-4ab8-8a22-f9f4e3417b9a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""900c7604-18a9-4069-a55d-d997f6f5ba4d"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b4bd449-d399-46c9-82d6-95d3e67b3e0f"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GridMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ede97c0-69ba-480f-90a0-23d5398f377e"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GridMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard Arrows"",
                    ""id"": ""b5437f42-d156-4ec8-b474-2f406c98b8b5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GridMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0f357fa2-b514-4eff-b538-3c36d29ba569"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""GridMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""12c453bd-45a4-457d-94da-4b4712ddbe4a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""GridMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d780f6bd-d4a9-499a-bd96-029ddc788ebc"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""GridMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1c4a02a9-0619-4022-b974-5d0c5270554b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""GridMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad  Arrows"",
                    ""id"": ""2e1df8c5-5f9c-4a28-ac12-105190d56da5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GridMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8c4ccad8-e697-4b35-a3c9-4877ebe30545"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GridMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6d780b16-09e6-46eb-aabd-e34e2c47bc43"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GridMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8b4dd9b1-4837-4f4a-8632-f1b439479f99"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GridMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""421c8f11-7e26-42e8-aa28-1286eee58dec"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GridMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fb52b492-e7bc-4047-ba7a-5776caff1dba"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""OpenOptions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fbd0044-b960-4db7-97a5-db755af980d4"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenOptions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8d39c13-aa44-44d2-9bbc-b50adaff79fe"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""GenerateItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""796c08b4-4b91-472b-8235-2c20fe72efc3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GenerateItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63262e86-89fc-454b-b6ce-bc6f70f22262"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Place/Pickup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19b0e4af-76ca-4a38-8a66-9effa913b0a9"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Place/Pickup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard & Mouse"",
            ""bindingGroup"": ""Keyboard & Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Inventory
        m_Inventory = asset.FindActionMap("Inventory", throwIfNotFound: true);
        m_Inventory_CursorPosition = m_Inventory.FindAction("CursorPosition", throwIfNotFound: true);
        m_Inventory_PlacePickup = m_Inventory.FindAction("Place/Pickup", throwIfNotFound: true);
        m_Inventory_OpenOptions = m_Inventory.FindAction("OpenOptions", throwIfNotFound: true);
        m_Inventory_Rotate = m_Inventory.FindAction("Rotate", throwIfNotFound: true);
        m_Inventory_GridMovement = m_Inventory.FindAction("GridMovement", throwIfNotFound: true);
        m_Inventory_GenerateItem = m_Inventory.FindAction("GenerateItem", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Inventory
    private readonly InputActionMap m_Inventory;
    private IInventoryActions m_InventoryActionsCallbackInterface;
    private readonly InputAction m_Inventory_CursorPosition;
    private readonly InputAction m_Inventory_PlacePickup;
    private readonly InputAction m_Inventory_OpenOptions;
    private readonly InputAction m_Inventory_Rotate;
    private readonly InputAction m_Inventory_GridMovement;
    private readonly InputAction m_Inventory_GenerateItem;
    public struct InventoryActions
    {
        private @InventoryInputActions m_Wrapper;
        public InventoryActions(@InventoryInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CursorPosition => m_Wrapper.m_Inventory_CursorPosition;
        public InputAction @PlacePickup => m_Wrapper.m_Inventory_PlacePickup;
        public InputAction @OpenOptions => m_Wrapper.m_Inventory_OpenOptions;
        public InputAction @Rotate => m_Wrapper.m_Inventory_Rotate;
        public InputAction @GridMovement => m_Wrapper.m_Inventory_GridMovement;
        public InputAction @GenerateItem => m_Wrapper.m_Inventory_GenerateItem;
        public InputActionMap Get() { return m_Wrapper.m_Inventory; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventoryActions set) { return set.Get(); }
        public void SetCallbacks(IInventoryActions instance)
        {
            if (m_Wrapper.m_InventoryActionsCallbackInterface != null)
            {
                @CursorPosition.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnCursorPosition;
                @CursorPosition.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnCursorPosition;
                @CursorPosition.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnCursorPosition;
                @PlacePickup.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnPlacePickup;
                @PlacePickup.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnPlacePickup;
                @PlacePickup.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnPlacePickup;
                @OpenOptions.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnOpenOptions;
                @OpenOptions.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnOpenOptions;
                @OpenOptions.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnOpenOptions;
                @Rotate.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnRotate;
                @Rotate.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnRotate;
                @Rotate.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnRotate;
                @GridMovement.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnGridMovement;
                @GridMovement.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnGridMovement;
                @GridMovement.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnGridMovement;
                @GenerateItem.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnGenerateItem;
                @GenerateItem.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnGenerateItem;
                @GenerateItem.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnGenerateItem;
            }
            m_Wrapper.m_InventoryActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CursorPosition.started += instance.OnCursorPosition;
                @CursorPosition.performed += instance.OnCursorPosition;
                @CursorPosition.canceled += instance.OnCursorPosition;
                @PlacePickup.started += instance.OnPlacePickup;
                @PlacePickup.performed += instance.OnPlacePickup;
                @PlacePickup.canceled += instance.OnPlacePickup;
                @OpenOptions.started += instance.OnOpenOptions;
                @OpenOptions.performed += instance.OnOpenOptions;
                @OpenOptions.canceled += instance.OnOpenOptions;
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @GridMovement.started += instance.OnGridMovement;
                @GridMovement.performed += instance.OnGridMovement;
                @GridMovement.canceled += instance.OnGridMovement;
                @GenerateItem.started += instance.OnGenerateItem;
                @GenerateItem.performed += instance.OnGenerateItem;
                @GenerateItem.canceled += instance.OnGenerateItem;
            }
        }
    }
    public InventoryActions @Inventory => new InventoryActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard & Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IInventoryActions
    {
        void OnCursorPosition(InputAction.CallbackContext context);
        void OnPlacePickup(InputAction.CallbackContext context);
        void OnOpenOptions(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnGridMovement(InputAction.CallbackContext context);
        void OnGenerateItem(InputAction.CallbackContext context);
    }
}
